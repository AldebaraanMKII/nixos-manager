* nixos-manager — manage your NixOS graphically

[[https://travis-ci.com/pmiddend/nixos-manager.svg?branch=master][https://travis-ci.com/pmiddend/nixos-manager.svg?branch=master]]

** Welcome screen, featuring a frontend for =nixos-rebuild=

[[./screenshots/admin.png]]

** Search and install (or try) packages

[[./screenshots/packages.png]]

** Configure services

[[./screenshots/services.png]]


** What’s the goal of this?

The idea is to build something to *configure NixOS graphically*. To me, this means: managing the installed software packages, and managing the enabled services, as well as updating and garbage-collecting. For the moment, I’m focusing on a solution for a declarative, global configuration.

The goal is *not* to make all of NixOS accessible via a GUI, and not give an alternative to writing Nix expressions for your configuration. This is a project to explore how far you can get graphically after installing NixOS (which, in the near future, should be possible via a GUI installer as well).

** Approach

Since the NixOS configuration is very “free-form”, I have to make some assumptions about the structure of your =configuration.nix= file, as such:

- You have two additional =.nix= files, referenced from the =imports= section in your =configuration.nix=: =packages.nix= and =services.nix=
- =packages.nix= is a flat list of packages
- =services.nix= is a list of service definitions

** Technology

I’m using Haskell as the language of choice, simply because =hnix= is available and allows me to easily parse and serialize the relevant Nix configuration files. The GUI is made via =gi-gtk-declarative=, which serves me well and is pretty stable.

** Current status

- The frontend for =nixos-rebuild= works. It doesn’t support =--upgrade= yet, though.
- Rebuilding copies =packages.nix= and =services.nix= to =/etc/nixos/nixos-manager=. Without these files being included in your =configuration.nix=, they’re worthless, though.
- Configuring services works, with some minor quirks.
- Trying packages works, and installing/uninstalling too. The =packages.nix= will be updated accordingly.
